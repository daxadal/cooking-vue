default:
  interruptible: true
  image: node:16-bullseye-slim

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"' # Run when requested manually
      when: always
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"' # Run on merge request
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_OPEN_MERGE_REQUESTS' # Avoid duplicated pipelines
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH' # Run on branch push
      when: always
    - when: never # Otherwise -> Don't pipeline

stages:
  - build
  - deploy

compile:
  stage: build
  cache:
    key: development
    paths:
      - dist/
    policy: push
  script:
    - echo "Pipeline triggered by '$CI_PIPELINE_SOURCE'"
    - npm ci
    - npm run build

compile-mocked:
  stage: build
  cache:
    key: mocked
    paths:
      - dist/
    policy: push
  script:
    - echo "Pipeline triggered by '$CI_PIPELINE_SOURCE'"
    - npm ci
    - npm run build:mocked

pages:
  stage: deploy
  cache:
    key: mocked
    paths:
      - dist/
    policy: pull
  script:
    - mkdir .public
    - cp -r dist/* .public
    - rm -rf public
    - mv .public public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"' # Run on merge request
      when: on_success
    - if: '$CI_OPEN_MERGE_REQUESTS'
      when: on_success
    - when: manual
      allow_failure: true

deploy-to-server:
  stage: deploy
  image: instrumentisto/rsync-ssh:alpine
  cache:
    key: development
    paths:
      - dist/
    policy: pull
  environment:
    name: development
  script:
    - cp $SERVER_KEY server_key
    - ./deploy-pipeline.sh
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - if: '$CI_OPEN_MERGE_REQUESTS'
      when: on_success
    - when: manual
      allow_failure: true
